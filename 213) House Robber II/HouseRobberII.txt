class Solution {
    public int rob(int[] nums) {
        if(nums.length == 0)
            return 0;
        else if(nums.length == 1)
            return nums[0];
        else if(nums.length == 2)
            return Math.max(nums[0],nums[1]);
        int[] dp1 = new int[nums.length];
        int[] dp2 = new int[nums.length];
        
        for(int i=0;i<nums.length-1;i++){
            if(i==0){
                dp1[i] = nums[i];
            }
            else if(i==1){
                dp1[i] = Math.max(nums[i],nums[i-1]);
            }
            
            else{
                dp1[i] = Math.max(dp1[i-1],dp1[i-2]+nums[i]);
            }
        }
        for(int i=0;i<nums.length;i++){
            if(i==0){
                dp2[i] = 0;
            }
            else if(i==1){
                dp2[i] = nums[i];
            }
            else{
                dp2[i] = Math.max(dp2[i-1],dp2[i-2]+nums[i]);
            }
        }
        // System.out.println(Arrays.toString(dp1));
        // System.out.println(Arrays.toString(dp2));
        return Math.max(dp1[nums.length-2],dp2[nums.length-1]);
    }
}
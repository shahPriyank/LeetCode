class Solution {
    public int firstUniqChar(String s) {
        LinkedHashMap<Character, Boolean> hm = new LinkedHashMap<Character, Boolean>();
        for(char c: s.toCharArray()){
            if(!hm.containsKey(c))
                hm.put(c,false);
            else{
                hm.put(c,true);
            }
        }
        System.out.println(hm.toString());
        int i;
        // for(i=0;i<hm.size();i++){
        //     if(!hm.get(i))
        //         break;
        // }
        char key = ' ';
        for (Map.Entry<Character, Boolean> entry : hm.entrySet()) {
            if(!entry.getValue()){
                key = entry.getKey();
                break;
            }
        }
        if(key == ' '){
            return -1;
        }
        // System.out.println(key);
        int index = s.indexOf(key);
        return index;
    }
}
class Solution {
    public int lengthOfLongestSubstringKDistinct(String s, int k) {
        HashMap<Character, Integer> hm = new HashMap<Character, Integer>();
        if(k==0 || s.isEmpty()){
            return 0;
        }
        int count = 0;
        int ans = Integer.MIN_VALUE;
        for(int i=0;i<s.length();i++){
            while(count<s.length()){
                if(!hm.containsKey(s.charAt(count))){
                    if(hm.size() == k){
                        break;
                    }
                    hm.put(s.charAt(count),1);
                    
                }
                else{
                    hm.put(s.charAt(count),hm.get(s.charAt(count))+1);
                }
                count++;
            }
            ans = Math.max(ans,count-i);
            if(hm.containsKey(s.charAt(i))){
                hm.put(s.charAt(i),hm.get(s.charAt(i))-1);
                if(hm.get(s.charAt(i)) == 0){
                    hm.remove(s.charAt(i));
                }
            }    
        }
        
        return ans;
    }
}
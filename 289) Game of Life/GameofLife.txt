class Solution {
    public void gameOfLife(int[][] board) {
        int m = board.length;
        int n = board[0].length;
        int dx[] = {-1,-1,-1,0,1,1,1,0};
	    int dy[] = {-1,0,1,1,1,0,-1,-1};
        int no_of_neighbors;
        for(int i=0;i<m;i++){
            for(int j=0;j<n;j++){
                no_of_neighbors = calculate(board,i,j,dx,dy,m,n);
                if(board[i][j] == 1 && ((no_of_neighbors == 2) || (no_of_neighbors == 3))){
                    board[i][j] = 3;
                }
                else if(board[i][j] == 0 && no_of_neighbors == 3){
                    board[i][j] = 2;
                }
            }
        }
        for(int i=0;i<board.length;i++){
            for(int j=0;j<board[0].length;j++){
                board[i][j] = board[i][j]>>1;
            }
        }
    }
        static int calculate(int[][] board, int i, int j, int[] dx, int[] dy, int m, int n){
            
            int count = 0;
            for (int k = 0 ; k < dx.length ; k++ ) {
                if (isValid(i+dx[k],j+dy[k],m,n)) {
                    
                        count+=board[i+dx[k]][j+dy[k]] & 1;
                    // }
                }
		    }
            System.out.println(i+" "+j+" "+count);
            return count;
        }
        static boolean isValid(int i,int j, int m ,int n){
            if(i>=0 && i<m && j>=0 && j<n){
                return true;
            }
            return false;
        }
    
}
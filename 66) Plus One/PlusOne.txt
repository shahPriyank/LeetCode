// class Solution {
//     public int[] plusOne(int[] digits) {
//         List<Integer> op = new ArrayList<>();
//         int c = digits.length - 1;
//         while(digits[c]+1 > 9){
//             op.add(0);
//             c--;
//             if(c<0){
//                 break;
//             }
//         }
//         if(c==-1)
//             op.add(1);
//         else{
//             digits[c] += 1;
//         }
//         while(c!=-1){
//             op.add(digits[c]);
//             c--;
//         }
//         Collections.reverse(op);
        
//         int[] arr = new int[op.size()];
//         for(int i=0;i<arr.length;i++){
//             arr[i] = op.get(i);
//         }
//         return arr;
//     }
// }
class Solution {
public int[] plusOne(int[] digits) {
        
    int n = digits.length;
    for(int i=n-1; i>=0; i--) {
        if(digits[i] < 9) {
            digits[i]++;
            return digits;
        }
        
        digits[i] = 0;
    }
    
    int[] newNumber = new int [n+1];
    newNumber[0] = 1;
    
    return newNumber;
}
}
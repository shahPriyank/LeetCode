class NumMatrix {
    int[][] compute;
    int[][] matrix =null;
    int total;
    public NumMatrix(int[][] matrix) {
        if(matrix == null || matrix.length == 0 || matrix[0].length == 0){
            return;
        }
        compute = new int[matrix.length][matrix[0].length+1];
        this.matrix = matrix;
        for(int i=0;i<matrix.length;i++){
            for(int j=0;j<matrix[0].length;j++){
                compute[i][j+1] = compute[i][j] + matrix[i][j];
            }
        }
        // System.out.println(Arrays.deepToString(compute));
    }
    
    public void update(int row, int col, int val) {
        int diff = val - (compute[row][col+1] - compute[row][col]);
        for(int p = col+1; p<compute[0].length;p++){
            compute[row][p] += diff;
        }
        matrix[row][col] = val;
        // System.out.println(Arrays.deepToString(compute));
        return;
    }
    
    public int sumRegion(int row1, int col1, int row2, int col2) {
        total = 0;
        for(int p=row1;p<=row2;p++){
            total += compute[p][col2+1]-compute[p][col1];
        }
        return total;
    }
}

/**
 * Your NumMatrix object will be instantiated and called as such:
 * NumMatrix obj = new NumMatrix(matrix);
 * obj.update(row,col,val);
 * int param_2 = obj.sumRegion(row1,col1,row2,col2);
 */